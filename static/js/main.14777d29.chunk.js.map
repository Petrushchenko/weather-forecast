{"version":3,"sources":["utils/parserWeather.js","store/constants.js","reducers/weather.js","components/Form.js","components/Tabs.js","components/Tab.js","components/Display.js","store/reducers.js","store/createStore.js","App.js","serviceWorker.js","index.js"],"names":["parserWeather","data","city","name","list","reduce","prev","current","dt_txt","_current$main","main","temp","temp_min","temp_max","humidity","weather","_dt_txt$split","split","_dt_txt$split2","Object","slicedToArray","date","hour","currentIndex","findIndex","elem","ranges","push","icon","Math","max","min","defineProperty","API_ROOT","concat","START","ERROR","SUCCESS","FETCH_WEATHER","initialState","query","status","search","actionHandlers","_actionHandlers","state","action","objectSpread","payload","d","reducer","arguments","length","undefined","handler","type","Form","currentLocation","fetch","then","res","json","_this","setState","changeInput","ev","target","value","handleSubmit","preventDefault","props","fetchWeather","this","react_default","a","createElement","onSubmit","placeholder","onChange","onClick","Component","connect","str","dispatch","encodeURIComponent","catch","err","Tabs","className","map","item","i","key","activeTab","changeTab","round","Tab","el","index","src","alt","slice","Display","changeActiveTab","keys","items","st","block","components_Tabs","components_Tab","combineReducers","weatherReducer","enhancers","thunk","apiMiddleware","store","createStore","rootReducer","applyMiddleware","apply","App","es","components_Form","components_Display","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.14777d29.chunk.js","sourcesContent":["import { findIndex } from \"lodash\";\r\n\r\nfunction parserWeather(data) {\r\n  const city = data.city.name;\r\n\r\n  const list = data.list.reduce((prev, current) => {\r\n    const {\r\n      dt_txt,\r\n      main: { temp, temp_min, temp_max, humidity },\r\n      weather\r\n    } = current;\r\n    const [date, hour] = dt_txt.split(\" \");\r\n    const currentIndex = findIndex(prev, elem => {\r\n      return elem.date === date;\r\n    });\r\n\r\n    if (currentIndex > -1) {\r\n      prev[currentIndex].ranges.push({\r\n        hour,\r\n        temp,\r\n        humidity,\r\n        icon: weather[0].icon\r\n      });\r\n      prev[currentIndex].temp_max = Math.max(\r\n        temp_max,\r\n        prev[currentIndex].temp_max\r\n      );\r\n      prev[currentIndex].temp_min = Math.min(\r\n        temp_min,\r\n        prev[currentIndex].temp_min\r\n      );   \r\n    } else {\r\n      prev.push({\r\n        date,\r\n        temp_min,\r\n        temp_max,\r\n        ranges: [\r\n          {\r\n            hour,\r\n            temp,\r\n            humidity,\r\n            icon: weather[0].icon\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n    return prev;\r\n  }, []);\r\n \r\n  return {\r\n    [city]: list\r\n  };\r\n}\r\n\r\nexport default parserWeather;\r\n","const WEATHER_API_KEY = '47bc274ab59ba52ed10ab021ce716200';\r\n\r\nexport const API_ROOT = `https://api.openweathermap.org/data/2.5/forecast?&APPID=${WEATHER_API_KEY}&units=metric&q=`;\r\n\r\n\r\nexport const START = \"_START\";\r\nexport const ERROR = \"_ERROR\";\r\nexport const SUCCESS = \"_SUCCESS\";\r\n\r\nexport const CHANGE_QUERY = \"CHANGE_QUERY\";\r\nexport const FETCH_WEATHER = \"FETCH_WEATHER\";","\r\nimport parserWeather from \"../utils/parserWeather\";\r\n\r\nimport {\r\n  API_ROOT,\r\n  START,\r\n  ERROR,\r\n  SUCCESS,\r\n  FETCH_WEATHER\r\n} from \"../store/constants\";\r\n\r\n\r\nexport function fetchWeather (str) {\r\n  return (dispatch) => {\r\n    dispatch({type:FETCH_WEATHER+START,query:str});\r\n    fetch( API_ROOT + encodeURIComponent(str))\r\n      .then(res=> res.json())\r\n      .then(res => {\r\n        dispatch({type: FETCH_WEATHER+SUCCESS, payload: res});\r\n      })\r\n      .catch( err => {\r\n        dispatch({type: FETCH_WEATHER+ERROR});\r\n      })\r\n     \r\n  }\r\n}\r\nconst initialState = {\r\n  query: \"\",\r\n  status: false,\r\n  search: null\r\n};\r\n\r\nconst actionHandlers = {\r\n\r\n  [FETCH_WEATHER+START]: (state, action) => {\r\n    const {query} = action;\r\n    return {...state,\r\n      \"status\":true,\r\n      query\r\n    };\r\n  },\r\n  [FETCH_WEATHER+SUCCESS]: (state, action) => {\r\n    const { payload } = action;\r\n    const d = parserWeather(payload);\r\n    return {...state, status: false, search: d};\r\n  },\r\n  [FETCH_WEATHER+ERROR]: (state, action) => {\r\n    \r\n    return {...state, status:false, search: null};\r\n  }\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const handler = actionHandlers[action.type];\r\n\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default reducer;\r\n","import React, { Component} from 'react';\r\nimport { connect} from 'react-redux';\r\nimport { fetchWeather } from '../reducers/weather';\r\nimport '../styles/form.css';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        city: ''\r\n    }\r\n    currentLocation = () => {\r\n        fetch('https://ipapi.co/json/').then( \r\n            res => res.json()\r\n            ).then(data => {\r\n                this.setState({\r\n                    city: data.city\r\n                });\r\n            })\r\n    }\r\n    changeInput =(ev) => {\r\n        this.setState({\r\n            city: ev.target.value\r\n        })\r\n    }\r\n    handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.fetchWeather(this.state.city)\r\n    }\r\n    componentWillMount(){\r\n        this.props.fetchWeather(\"Kyiv\")\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit = {this.handleSubmit}>\r\n                <div>\r\n                    <input type=\"search\" \r\n                           placeholder=\"Your city\" \r\n                           value = {this.state.city}\r\n                           onChange = {this.changeInput}/>\r\n                    <button > Search </button>\r\n                </div>\r\n                <div>\r\n                    <button type=\"button\" onClick={this.currentLocation}>Current Location</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {fetchWeather})(Form)","import React, { Component} from 'react';\r\n\r\nclass Tabs extends Component {\r\n    render() {\r\n        return (\r\n              <ul className=\"tabs\">\r\n                   {\r\n                    this.props.data.map((item, i) => \r\n                      <li key={i} \r\n                          className={this.props.activeTab === i ? \"active\" : null } \r\n                          onClick = {this.props.changeTab(i)}>\r\n                        <p>{item.date}</p>\r\n                        <div>\r\n                          <span>\r\n                            <p>min</p>\r\n                            <p>{Math.round(item.temp_min)}ᵒC</p>\r\n                          </span>\r\n                          <span>\r\n                            <p>max</p>\r\n                            <p>{Math.round(item.temp_max)}ᵒC</p>\r\n                          </span>\r\n                        </div>\r\n                      </li>)\r\n                  }\r\n               </ul>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Tabs;","import React, {Component} from 'react';\r\nimport '../styles/tab.css';\r\n\r\nclass Tab extends Component {\r\n    render(){\r\n      \r\n       const data = this.props.data.ranges.map((el, index) => \r\n            <div key = {index}>\r\n                <img src={`http://openweathermap.org/img/w/${el.icon}.png`} alt=\"\"></img>\r\n                <span>{el.hour.slice(0, 5)}</span>\r\n                <p>Temperature<br></br>{Math.round(el.temp)}ᵒC</p>\r\n                <p>Humidity<br></br> {el.humidity}%</p>\r\n\r\n            </div>\r\n        )\r\n        return (\r\n            <div className = \"weather\">\r\n                {data}\r\n          \r\n            </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Tab;","import React, { Component } from 'react';\r\nimport Tabs from './Tabs';\r\nimport Tab from './Tab';\r\nimport '../styles/display.css';\r\nimport { connect} from 'react-redux';\r\n\r\n\r\nclass Display extends Component {\r\n    state ={\r\n        activeTab: 0\r\n    }\r\n    changeActiveTab = (i) => () =>{\r\n        this.setState({\r\n            activeTab: i\r\n        })\r\n    }\r\n    render () {\r\n    const key = this.props.data ? Object.keys(this.props.data)[0] : null;\r\n    const items = key ? this.props.data[key] : null;\r\n    let st = this.props.status;\r\n    let block = <div className=\"preloader\">\r\n                        <div className=\"spinner\"></div>\r\n                </div>;\r\n    if(st === false) {\r\n        if (key) {\r\n            block = <div className=\"info\">\r\n                        <h2>Weather in {key}</h2>\r\n                        <div>\r\n                            <Tabs data = {items} \r\n                                activeTab = {this.state.activeTab} \r\n                                changeTab = {this.changeActiveTab}\r\n                             />\r\n                            <Tab data = {items[this.state.activeTab]}/>\r\n                        </div>\r\n                    </div>;\r\n        } else {\r\n           block =  <div className = \"error\">\r\n                <p>city not found</p>\r\n            </div>\r\n        }\r\n        \r\n    }\r\n\r\n    return(   \r\n            <div className =\"content\">\r\n                {block}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({data:state.weather.search, status:state.weather.status}))(Display);\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"../reducers/weather\";\r\n\r\nexport default combineReducers({\r\n  weather: weatherReducer\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\nimport { apiMiddleware } from 'redux-api-middleware';\r\n\r\nconst initialState = {};\r\nconst enhancers = [thunk, apiMiddleware];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...enhancers)\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport Form from './components/Form';\nimport './App.css';\nimport Display from './components/Display';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/createStore\";\n\n\nclass App extends Component {\n\n  render() {\n   \n    return (\n     <Provider store={store}>\n      <div className=\"App\">\n        <Form />\n        <Display />\n      \n      </div>\n     </Provider>\n    );\n  }\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}